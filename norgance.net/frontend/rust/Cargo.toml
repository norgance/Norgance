[package]
name = "norgance"
version = "0.1.0"
authors = ["Norgance <66333061+norgance-admin@users.noreply.github.com>"]
edition = "2018"
description = "Library of utilities for the Norgance frontend"
repository = "https://github.com/norgance/Norgance"
license = "CC0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
#default = ["console_error_panic_hook", "wee_alloc"]
# wee_alloc doesn't make a huge difference
default = ["console_error_panic_hook"]

[dependencies]
base64 = "0.13.0"
blake2-rfc = "0.2.18"
chatrouille = { version = "0.1.0", path = "../../chatrouille", features = ["wasm-bindgen"] }
getrandom = { version = "0.2.0", features = ["js"] }
hex = " 0.4.2"
rust-argon2 = "0.8"
sha1 = "0.6.0"
snafu = "0.6.9"
uuid = "0.8.1"
wasm-bindgen = "0.2.68"
x448 = "0.6.0"
rand = "0.7.3"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.18"

[dependencies.web-sys]
version = "0.3.45"
features = [
  "console",
]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

# Wasm-opt crashes in recent version
# https://github.com/rustwasm/wasm-pack/issues/886
[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Os", "--enable-mutable-globals"]